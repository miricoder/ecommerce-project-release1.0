{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs3/regenerator\"));\n\nvar _indexOf = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/index-of\"));\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/promise\"));\n\nvar _url = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/url\"));\n\nrequire(\"core-js/modules/es.string.replace.js\");\n\nrequire(\"core-js/modules/es.regexp.exec.js\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/asyncToGenerator\"));\n\nvar _introspect = _interopRequireDefault(require(\"./introspect\"));\n\nvar _bootstrap = _interopRequireDefault(require(\"./bootstrap\"));\n\nvar _parsers = _interopRequireDefault(require(\"./parsers\"));\n\nvar _client = require(\"./client\");\n/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nvar LATEST_SUPPORTED_IDX_API_VERSION = '1.0.0';\n\nvar start = /*#__PURE__*/function () {\n  var _start = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(_ref) {\n    var _issuer, _issuer2;\n\n    var clientId, domain, issuer, stateHandle, interactionHandle, version, redirectUri, state, scopes, codeChallenge, codeChallengeMethod, stateTokenExternalId, baseUrl, toPersist, cleanVersion, bootstrapParams, interaction_handle, _parsersForVersion, _makeIdxState, idxResponse, idxState;\n\n    return _regenerator.default.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            clientId = _ref.clientId, domain = _ref.domain, issuer = _ref.issuer, stateHandle = _ref.stateHandle, interactionHandle = _ref.interactionHandle, version = _ref.version, redirectUri = _ref.redirectUri, state = _ref.state, scopes = _ref.scopes, codeChallenge = _ref.codeChallenge, codeChallengeMethod = _ref.codeChallengeMethod, stateTokenExternalId = _ref.stateTokenExternalId;\n            issuer = (_issuer = issuer) === null || _issuer === void 0 ? void 0 : _issuer.replace(/\\/+$/, '');\n            baseUrl = ((_issuer2 = issuer) === null || _issuer2 === void 0 ? void 0 : (0, _indexOf.default)(_issuer2).call(_issuer2, '/oauth2')) > 0 ? issuer : issuer + '/oauth2'; // org AS uses domain as AS, but we need the base url for calls\n\n            toPersist = {\n              baseUrl: baseUrl,\n              clientId: clientId,\n              state: state\n            };\n\n            if (!(!domain && !issuer)) {\n              _context.next = 6;\n              break;\n            }\n\n            return _context.abrupt(\"return\", _promise.default.reject({\n              error: 'issuer is required'\n            }));\n\n          case 6:\n            if (!(!stateHandle && !clientId)) {\n              _context.next = 8;\n              break;\n            }\n\n            return _context.abrupt(\"return\", _promise.default.reject({\n              error: 'clientId is required'\n            }));\n\n          case 8:\n            if (!(!stateHandle && !redirectUri)) {\n              _context.next = 10;\n              break;\n            }\n\n            return _context.abrupt(\"return\", _promise.default.reject({\n              error: 'redirectUri is required'\n            }));\n\n          case 10:\n            if (!(!stateHandle && !(codeChallenge && codeChallengeMethod))) {\n              _context.next = 12;\n              break;\n            }\n\n            return _context.abrupt(\"return\", _promise.default.reject({\n              error: 'PKCE params (codeChallenge, codeChallengeMethod) are required'\n            }));\n\n          case 12:\n            if (!domain) {\n              domain = new _url.default(issuer).origin;\n            }\n\n            if (version) {\n              _context.next = 15;\n              break;\n            }\n\n            return _context.abrupt(\"return\", _promise.default.reject({\n              error: 'version is required'\n            }));\n\n          case 15:\n            cleanVersion = (version !== null && version !== void 0 ? version : '').replace(/[^0-9a-zA-Z._-]/, '');\n\n            if (!(cleanVersion !== version || !version)) {\n              _context.next = 18;\n              break;\n            }\n\n            return _context.abrupt(\"return\", _promise.default.reject({\n              error: 'invalid version supplied - version is required and uses semver syntax'\n            }));\n\n          case 18:\n            if (!(!stateHandle && !interactionHandle)) {\n              _context.next = 31;\n              break;\n            }\n\n            _context.prev = 19;\n            bootstrapParams = {\n              clientId: clientId,\n              baseUrl: baseUrl,\n              scopes: scopes,\n              redirectUri: redirectUri,\n              codeChallenge: codeChallenge,\n              codeChallengeMethod: codeChallengeMethod,\n              state: state\n            };\n            _context.next = 23;\n            return (0, _bootstrap.default)(bootstrapParams);\n\n          case 23:\n            interaction_handle = _context.sent;\n            interactionHandle = interaction_handle;\n            toPersist.interactionHandle = interactionHandle;\n            _context.next = 31;\n            break;\n\n          case 28:\n            _context.prev = 28;\n            _context.t0 = _context[\"catch\"](19);\n            return _context.abrupt(\"return\", _promise.default.reject({\n              error: _context.t0\n            }));\n\n          case 31:\n            _context.prev = 31;\n            _parsersForVersion = (0, _parsers.default)(version), _makeIdxState = _parsersForVersion.makeIdxState;\n            _context.next = 35;\n            return (0, _introspect.default)({\n              domain: domain,\n              interactionHandle: interactionHandle,\n              stateHandle: stateHandle,\n              version: version,\n              stateTokenExternalId: stateTokenExternalId\n            }).catch(function (err) {\n              return _promise.default.reject({\n                error: 'introspect call failed',\n                // Transform all errors into an IdX State object.\n                // This allows IdX based errors (messages) to optionally proceed with remediation forms\n                details: _makeIdxState(err, toPersist)\n              });\n            });\n\n          case 35:\n            idxResponse = _context.sent;\n            idxState = _makeIdxState(idxResponse, toPersist);\n            return _context.abrupt(\"return\", idxState);\n\n          case 40:\n            _context.prev = 40;\n            _context.t1 = _context[\"catch\"](31);\n            return _context.abrupt(\"return\", _promise.default.reject({\n              error: _context.t1\n            }));\n\n          case 43:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[19, 28], [31, 40]]);\n  }));\n\n  function start(_x) {\n    return _start.apply(this, arguments);\n  }\n\n  return start;\n}();\n\nvar _parsersForVersion2 = (0, _parsers.default)(LATEST_SUPPORTED_IDX_API_VERSION),\n    makeIdxState = _parsersForVersion2.makeIdxState;\n\nvar _default = {\n  start: start,\n  introspect: _introspect.default,\n  interact: _bootstrap.default,\n  makeIdxState: makeIdxState,\n  client: _client.HttpClient,\n  LATEST_SUPPORTED_IDX_API_VERSION: LATEST_SUPPORTED_IDX_API_VERSION\n};\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}