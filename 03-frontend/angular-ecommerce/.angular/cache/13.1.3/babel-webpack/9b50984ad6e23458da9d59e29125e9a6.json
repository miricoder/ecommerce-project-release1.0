{"ast":null,"code":"\"use strict\";\n\nvar _Object$keys = require(\"@babel/runtime-corejs3/core-js-stable/object/keys\");\n\nvar _Object$getOwnPropertySymbols = require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols\");\n\nvar _filterInstanceProperty = require(\"@babel/runtime-corejs3/core-js-stable/instance/filter\");\n\nvar _Object$getOwnPropertyDescriptor = require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor\");\n\nvar _forEachInstanceProperty = require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\");\n\nvar _Object$getOwnPropertyDescriptors = require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors\");\n\nvar _Object$defineProperties = require(\"@babel/runtime-corejs3/core-js-stable/object/define-properties\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nrequire(\"core-js/modules/es.function.name.js\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs3/regenerator\"));\n\nvar _stringify = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/json/stringify\"));\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/promise\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/defineProperty\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/asyncToGenerator\"));\n\nvar _client = require(\"../client\");\n\nvar _actionParser = require(\"./actionParser\");\n\nvar _makeIdxState = _interopRequireDefault(require(\"./makeIdxState\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = _Object$keys(object);\n\n  if (_Object$getOwnPropertySymbols) {\n    var symbols = _Object$getOwnPropertySymbols(object);\n\n    if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) {\n      return _Object$getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      var _context2;\n\n      _forEachInstanceProperty(_context2 = ownKeys(Object(source), true)).call(_context2, function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (_Object$getOwnPropertyDescriptors) {\n      _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source));\n    } else {\n      var _context3;\n\n      _forEachInstanceProperty(_context3 = ownKeys(Object(source))).call(_context3, function (key) {\n        _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar generateDirectFetch = function generateDirectFetch(_ref) {\n  var actionDefinition = _ref.actionDefinition,\n      _ref$defaultParamsFor = _ref.defaultParamsForAction,\n      defaultParamsForAction = _ref$defaultParamsFor === void 0 ? {} : _ref$defaultParamsFor,\n      _ref$immutableParamsF = _ref.immutableParamsForAction,\n      immutableParamsForAction = _ref$immutableParamsF === void 0 ? {} : _ref$immutableParamsF,\n      toPersist = _ref.toPersist;\n  var target = actionDefinition.href;\n  return /*#__PURE__*/function () {\n    var _ref2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(params) {\n      var headers, body;\n      return _regenerator.default.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              headers = {\n                'content-type': 'application/json',\n                'accept': actionDefinition.accepts || 'application/ion+json'\n              };\n              body = (0, _stringify.default)(_objectSpread(_objectSpread(_objectSpread({}, defaultParamsForAction), params), immutableParamsForAction));\n              return _context.abrupt(\"return\", (0, _client.request)(target, {\n                method: actionDefinition.method,\n                headers: headers,\n                body: body\n              }).then(function (response) {\n                var respJson = response.json();\n\n                if (response.ok) {\n                  return respJson;\n                } else if (response.status === 401 && response.headers.get('WWW-Authenticate') === 'Oktadevicejwt realm=\"Okta Device\"') {\n                  // Okta server responds 401 status code with WWW-Authenticate header and new remediation\n                  // so that the iOS/MacOS credential SSO extension (Okta Verify) can intercept\n                  // the response reaches here when Okta Verify is not installed\n                  // we need to return an idx object so that\n                  // the SIW can proceed to the next step without showing error\n                  return respJson.then(function (err) {\n                    var ms = (0, _makeIdxState.default)(err, toPersist); // set to true if flow should be continued without showing any errors\n\n                    ms.stepUp = true;\n                    return _promise.default.reject(ms);\n                  });\n                }\n\n                return respJson.then(function (err) {\n                  return _promise.default.reject((0, _makeIdxState.default)(err, toPersist));\n                });\n              }).then(function (idxResponse) {\n                return (0, _makeIdxState.default)(idxResponse, toPersist);\n              }));\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n}; // TODO: Resolve in M2: Either build the final polling solution or remove this code\n// const generatePollingFetch = function generatePollingFetch( { actionDefinition, defaultParamsForAction = {}, immutableParamsForAction = {} } ) {\n//   // TODO: Discussions ongoing about when/how to terminate polling: OKTA-246581\n//   const target = actionDefinition.href;\n//   return async function(params) {\n//     return fetch(target, {\n//       method: actionDefinition.method,\n//       headers: {\n//         'content-type': actionDefinition.accepts,\n//       },\n//       body: JSON.stringify({ ...defaultParamsForAction, ...params, ...immutableParamsForAction })\n//     })\n//       .then( response => response.ok ? response.json() : response.json().then( err => Promise.reject(err)) )\n//       .then( idxResponse => makeIdxState(idxResponse) );\n//   };\n// };\n\n\nvar generateIdxAction = function generateIdxAction(actionDefinition, toPersist) {\n  // TODO: leaving this here to see where the polling is EXPECTED to drop into the code, but removing any accidental trigger of incomplete code\n  // const generator =  actionDefinition.refresh ? generatePollingFetch : generateDirectFetch;\n  var generator = generateDirectFetch;\n\n  var _divideActionParamsBy = (0, _actionParser.divideActionParamsByMutability)(actionDefinition),\n      defaultParams = _divideActionParamsBy.defaultParams,\n      neededParams = _divideActionParamsBy.neededParams,\n      immutableParams = _divideActionParamsBy.immutableParams;\n\n  var action = generator({\n    actionDefinition: actionDefinition,\n    defaultParamsForAction: defaultParams[actionDefinition.name],\n    immutableParamsForAction: immutableParams[actionDefinition.name],\n    toPersist: toPersist\n  });\n  action.neededParams = neededParams;\n  return action;\n};\n\nvar _default = generateIdxAction;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}