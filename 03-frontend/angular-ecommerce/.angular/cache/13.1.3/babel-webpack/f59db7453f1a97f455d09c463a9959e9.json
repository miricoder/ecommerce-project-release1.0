{"ast":null,"code":"var _a, _b, _c, _d;\n\nimport { FormControl, Validators } from '@angular/forms';\nimport { Order } from 'src/app/common/order';\nimport { OrderItem } from 'src/app/common/order-item';\nimport { PaymentInfo } from 'src/app/common/payment-info';\nimport { Purchase } from 'src/app/common/purchase';\nimport { Luv2ShopValidators } from 'src/app/validators/luv2-shop-validators';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/luv2-shop-form.service\";\nimport * as i3 from \"src/app/services/cart.service\";\nimport * as i4 from \"src/app/services/checkout.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@angular/common\";\n\nfunction CheckoutComponent_div_14_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" First Name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CheckoutComponent_div_14_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" First Name must be at least 2 charecters long \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CheckoutComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtemplate(1, CheckoutComponent_div_14_div_1_Template, 2, 0, \"div\", 32);\n    i0.ɵɵtemplate(2, CheckoutComponent_div_14_div_2_Template, 2, 0, \"div\", 32);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.firstName.errors.required || ctx_r0.firstName.errors.notOnlyWhitespace);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.firstName.errors.minlength);\n  }\n}\n\nfunction CheckoutComponent_div_22_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Last Name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CheckoutComponent_div_22_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Last name must be at least 2 charectors long \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CheckoutComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtemplate(1, CheckoutComponent_div_22_div_1_Template, 2, 0, \"div\", 32);\n    i0.ɵɵtemplate(2, CheckoutComponent_div_22_div_2_Template, 2, 0, \"div\", 32);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.lastName.errors.required || ctx_r1.lastName.errors.notOnlyWhitespace);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.lastName.errors.minlength);\n  }\n}\n\nfunction CheckoutComponent_div_30_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Email is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CheckoutComponent_div_30_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Email must be a valid email address \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CheckoutComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtemplate(1, CheckoutComponent_div_30_div_1_Template, 2, 0, \"div\", 32);\n    i0.ɵɵtemplate(2, CheckoutComponent_div_30_div_2_Template, 2, 0, \"div\", 32);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.email.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.email.errors.pattern);\n  }\n}\n\nfunction CheckoutComponent_option_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 34);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const country_r23 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", country_r23);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", country_r23.name, \" \");\n  }\n}\n\nfunction CheckoutComponent_div_42_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Country is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CheckoutComponent_div_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtemplate(1, CheckoutComponent_div_42_div_1_Template, 2, 0, \"div\", 32);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.shippingAddressCountry.errors.required);\n  }\n}\n\nfunction CheckoutComponent_div_50_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Street is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CheckoutComponent_div_50_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Street must be at least 2 charecters long \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CheckoutComponent_div_50_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtemplate(1, CheckoutComponent_div_50_div_1_Template, 2, 0, \"div\", 32);\n    i0.ɵɵtemplate(2, CheckoutComponent_div_50_div_2_Template, 2, 0, \"div\", 32);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.shippingAddressStreet.errors.required || ctx_r5.shippingAddressStreet.errors.notOnlyWhitespace);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.billingAddressStreet.errors.minlength);\n  }\n}\n\nfunction CheckoutComponent_div_58_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" City is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CheckoutComponent_div_58_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" City must be at least 2 charecters long \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CheckoutComponent_div_58_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtemplate(1, CheckoutComponent_div_58_div_1_Template, 2, 0, \"div\", 32);\n    i0.ɵɵtemplate(2, CheckoutComponent_div_58_div_2_Template, 2, 0, \"div\", 32);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.shippingAddressCity.errors.required || ctx_r6.shippingAddressCity.errors.notOnlyWhitespace);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.billingAddressCity.errors.minlength);\n  }\n}\n\nfunction CheckoutComponent_option_66_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 34);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const state_r29 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", state_r29);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", state_r29.name, \" \");\n  }\n}\n\nfunction CheckoutComponent_div_67_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" State is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CheckoutComponent_div_67_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtemplate(1, CheckoutComponent_div_67_div_1_Template, 2, 0, \"div\", 32);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.shippingAddressState.errors.required);\n  }\n}\n\nfunction CheckoutComponent_div_75_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" ZipCode is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CheckoutComponent_div_75_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" ZipCode must be at least 2 charecters long \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CheckoutComponent_div_75_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtemplate(1, CheckoutComponent_div_75_div_1_Template, 2, 0, \"div\", 32);\n    i0.ɵɵtemplate(2, CheckoutComponent_div_75_div_2_Template, 2, 0, \"div\", 32);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.shippingAddressZipcode.errors.required || ctx_r9.shippingAddressZipcode.errors.notOnlyWhitespace);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.billingAddressZipcode.errors.minlength);\n  }\n}\n\nfunction CheckoutComponent_option_91_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 34);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const country_r33 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", country_r33);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", country_r33.name, \" \");\n  }\n}\n\nfunction CheckoutComponent_div_92_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Country is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CheckoutComponent_div_92_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtemplate(1, CheckoutComponent_div_92_div_1_Template, 2, 0, \"div\", 32);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.billingAddressCountry.errors.required);\n  }\n}\n\nfunction CheckoutComponent_div_100_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Street is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CheckoutComponent_div_100_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Street must be at least 2 charecters long \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CheckoutComponent_div_100_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtemplate(1, CheckoutComponent_div_100_div_1_Template, 2, 0, \"div\", 32);\n    i0.ɵɵtemplate(2, CheckoutComponent_div_100_div_2_Template, 2, 0, \"div\", 32);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.billingAddressStreet.errors.required || ctx_r12.billingAddressStreet.errors.notOnlyWhitespace);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.billingAddressStreet.errors.minlength);\n  }\n}\n\nfunction CheckoutComponent_div_108_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" City is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CheckoutComponent_div_108_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" City must be at least 2 charecters long \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CheckoutComponent_div_108_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtemplate(1, CheckoutComponent_div_108_div_1_Template, 2, 0, \"div\", 32);\n    i0.ɵɵtemplate(2, CheckoutComponent_div_108_div_2_Template, 2, 0, \"div\", 32);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r13.billingAddressCity.errors.required || ctx_r13.billingAddressCity.errors.notOnlyWhitespace);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r13.billingAddressCity.errors.minlength);\n  }\n}\n\nfunction CheckoutComponent_option_116_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 34);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const state_r39 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", state_r39);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", state_r39.name, \" \");\n  }\n}\n\nfunction CheckoutComponent_div_117_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" State is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CheckoutComponent_div_117_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtemplate(1, CheckoutComponent_div_117_div_1_Template, 2, 0, \"div\", 32);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r15.billingAddressState.errors.required);\n  }\n}\n\nfunction CheckoutComponent_div_125_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" ZipCode is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CheckoutComponent_div_125_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" ZipCode must be at least 2 charecters long \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CheckoutComponent_div_125_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtemplate(1, CheckoutComponent_div_125_div_1_Template, 2, 0, \"div\", 32);\n    i0.ɵɵtemplate(2, CheckoutComponent_div_125_div_2_Template, 2, 0, \"div\", 32);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r16.billingAddressZipcode.errors.required || ctx_r16.billingAddressZipcode.errors.notOnlyWhitespace);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r16.billingAddressZipcode.errors.minlength);\n  }\n}\n\nexport let CheckoutComponent = /*#__PURE__*/(() => {\n  class CheckoutComponent {\n    //1: Inject FormBuilder group using the constructor \n    constructor(formBuilder, luv2ShopFormService, cartService, checkoutService, router) {\n      this.formBuilder = formBuilder;\n      this.luv2ShopFormService = luv2ShopFormService;\n      this.cartService = cartService;\n      this.checkoutService = checkoutService;\n      this.router = router;\n      this.totalPrice = 0;\n      this.totalQuantity = 0;\n      this.creditCardYears = [];\n      this.creditCardMonths = [];\n      this.countries = [];\n      this.shippingAddressStates = [];\n      this.billingAddressStates = []; //Used for prepopulating the email field when checking out \n\n      this.storage = sessionStorage; //[STRIPE]Initializinig STRIPE API and PaymentInfo DTO \n\n      this.stripe = Stripe(environment.stripePublishableKey);\n      this.paymentInfo = new PaymentInfo();\n      this.displayError = \"\";\n    }\n\n    ngOnInit() {\n      //[STRIPE] - Set up Stripe payment form\n      this.setupStripePaymentForm();\n      this.reviewCartDetails(); //Used for prepopulating the email field when checking out \n\n      /*read the user's email address from browser storage*/\n\n      const theEmail = JSON.parse(this.storage.getItem('userEmail')); //2: Build the Form \n      // -> customer - key for the group (FormGroup name)\n      // -> firstName,lastName,email - FormControl names, these are the form fields \n      // -> Empty brackets or value for the fields - FormControl initial value empty string \n      //3: Every control group name contain validations as well which starts with creating new FormControl() initial \n      //    value which is empty \n\n      this.checkoutFormGroup = this.formBuilder.group({\n        customer: this.formBuilder.group({\n          firstName: new FormControl('', [Validators.required, Validators.minLength(2), Luv2ShopValidators.notOnlyWhitespace]),\n          lastName: new FormControl('', [Validators.required, Validators.minLength(2), Luv2ShopValidators.notOnlyWhitespace]),\n          email: new FormControl(theEmail, //Using Validators.pattern instead of Validators.email in order to verify actual email domains \n          [Validators.required, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')])\n        }),\n        shippingAddress: this.formBuilder.group({\n          street: new FormControl('', [Validators.required, Validators.minLength(2), Luv2ShopValidators.notOnlyWhitespace]),\n          city: new FormControl('', [Validators.required, Validators.minLength(2), Luv2ShopValidators.notOnlyWhitespace]),\n          state: new FormControl('', [Validators.required]),\n          country: new FormControl('', [Validators.required]),\n          zipCode: new FormControl('', [Validators.required, Validators.minLength(2), Luv2ShopValidators.notOnlyWhitespace])\n        }),\n        billingAddress: this.formBuilder.group({\n          street: new FormControl('', [Validators.required, Validators.minLength(2), Luv2ShopValidators.notOnlyWhitespace]),\n          city: new FormControl('', [Validators.required, Validators.minLength(2), Luv2ShopValidators.notOnlyWhitespace]),\n          state: new FormControl('', [Validators.required]),\n          country: new FormControl('', [Validators.required]),\n          zipCode: new FormControl('', [Validators.required, Validators.minLength(2), Luv2ShopValidators.notOnlyWhitespace])\n        }),\n        creditCard: this.formBuilder.group({//Replaced by Stripe code\n\n          /* cardType: new FormControl('',\n            [Validators.required,\n            Validators.minLength(2),\n            Luv2ShopValidators.notOnlyWhitespace]),\n          nameOnCard: new FormControl('',\n            [Validators.required,\n            Validators.minLength(2),\n            Luv2ShopValidators.notOnlyWhitespace]),\n          cardNumber: new FormControl('', [Validators.required, Validators.pattern('[0-9]{16}')]),\n          securityCode: new FormControl('', [Validators.required, Validators.pattern('[0-9]{3}')]),\n          expirationMonth: [''],\n          expirationYear: ['']*/\n        })\n      }); // populate credit card months\n      //Replaced by Stripe code\n\n      /*const startMonth: number = new Date().getMonth() + 1;\n      console.log(\"startMonth: \" + startMonth);\n           this.luv2ShopFormService.getCreditCardMonths(startMonth).subscribe(\n        data => {\n          console.log(\"Retrieved credit card months: \" + JSON.stringify(data));\n          this.creditCardMonths = data;\n        }\n      );\n             // populate credit card years\n           this.luv2ShopFormService.getCreditCardYears().subscribe(\n        data => {\n          console.log(\"Retrieved credit card years: \" + JSON.stringify(data));\n          this.creditCardYears = data;\n        }\n      );\n      */\n      // populate countries\n\n      this.luv2ShopFormService.getCountries().subscribe(data => {\n        console.log(\"Retrieved countries: \" + JSON.stringify(data));\n        this.countries = data;\n      });\n    }\n\n    setupStripePaymentForm() {\n      //Get a handle to stripe elements\n      var element = this.stripe.elements(); //Create a card Element ... customize it to hide zip-code field\n\n      this.cardEelement = elements.create('card', {\n        hidePosalCode: true\n      }); //Add an instance of card UI component into the 'card-element' div\n\n      this.cardEelement.mount('#card-element'); //Add event binding for the 'change' event on the card element\n\n      this.cardEelement.on('change', event => {\n        // get a handle to card-errors element \n        this.displayError = document.getElementById('card-errors');\n\n        if (event.complete) {\n          this.displayError.textContent = \"\";\n        } else if (event.error) {\n          //Show validation error to customer\n          this.displayError.textContent = event.error.message;\n        }\n      });\n    } //Pub/Sub latest Price, Shipping Details and Quantity in Review Cart Details \n\n\n    reviewCartDetails() {\n      // subscribe to cartService.totalQuantity\n      this.cartService.totalQuantity.subscribe(totalQuantity => this.totalQuantity = totalQuantity); // subscribe to cartService.totalPrice\n\n      this.cartService.totalPrice.subscribe(totalPrice => this.totalPrice = totalPrice);\n    }\n    /****\n         * VALIDATIONs - Getter Methods */\n\n\n    get firstName() {\n      return this.checkoutFormGroup.get('customer.firstName');\n    }\n\n    get lastName() {\n      return this.checkoutFormGroup.get('customer.lastName');\n    }\n\n    get email() {\n      return this.checkoutFormGroup.get('customer.email');\n    } //Shipping\n\n\n    get shippingAddressStreet() {\n      return this.checkoutFormGroup.get('shippingAddress.street');\n    }\n\n    get shippingAddressCity() {\n      return this.checkoutFormGroup.get('shippingAddress.city');\n    }\n\n    get shippingAddressState() {\n      return this.checkoutFormGroup.get('shippingAddress.state');\n    }\n\n    get shippingAddressZipcode() {\n      return this.checkoutFormGroup.get('shippingAddress.zipCode');\n    }\n\n    get shippingAddressCountry() {\n      return this.checkoutFormGroup.get('shippingAddress.country');\n    } //Billing\n\n\n    get billingAddressStreet() {\n      return this.checkoutFormGroup.get('billingAddress.street');\n    }\n\n    get billingAddressCity() {\n      return this.checkoutFormGroup.get('billingAddress.city');\n    }\n\n    get billingAddressState() {\n      return this.checkoutFormGroup.get('billingAddress.state');\n    }\n\n    get billingAddressZipcode() {\n      return this.checkoutFormGroup.get('billingAddress.zipCode');\n    }\n\n    get billingAddressCountry() {\n      return this.checkoutFormGroup.get('billingAddress.country');\n    } //Credit Card Details \n\n\n    get creditCardType() {\n      return this.checkoutFormGroup.get('creditCard.cardType');\n    }\n\n    get creditCardnameOnCard() {\n      return this.checkoutFormGroup.get('creditCard.nameOnCard');\n    }\n\n    get creditCardNumber() {\n      return this.checkoutFormGroup.get('creditCard.cardNumber');\n    }\n\n    get creditCardSecurityCode() {\n      return this.checkoutFormGroup.get('creditCard.securityCode');\n    }\n\n    copyShippingAddressToBillingAddress(event) {\n      //If Billing address is same as Shippinhg copy Shipping over to Billing \n      if (event.target.checked) {\n        this.checkoutFormGroup.controls.billingAddress.setValue(this.checkoutFormGroup.controls.shippingAddress.value); //bug fiz code for states (discovered on Nov 28 21 8:14AM / States are not Auto populating when checkbox is selected)\n\n        this.billingAddressStates = this.shippingAddressStates;\n      } else {\n        //If not then reset back to blank forum so billing information can be entered \n        this.checkoutFormGroup.controls.billingAddress.reset(); //bug fiz code for states (discovered on Nov 28 21 8:14AM / States are not Auto populating when checkbox is selected)\n        //to clear billing states when nothing is selected \n\n        this.billingAddressStates = [];\n      }\n    } //3: Method to call when submit button is clicked - Event Handling \n\n\n    onSubmit() {\n      console.log(\"Handling the submit button\"); // [+] Checking ng validations upon submit \n      //    [-] Touching all fields triggers the display of the error messages \n\n      if (this.checkoutFormGroup.invalid) {\n        this.checkoutFormGroup.markAllAsTouched();\n        return;\n      }\n      /***Saving order details to the back end steps for onSubmit Button are below*/\n\n      /*[1] - set up order*/\n\n\n      let order = new Order();\n      order.totalPrice = this.totalPrice;\n      order.totalQuantity = this.totalQuantity;\n      /*[2] - get cart items*/\n\n      const cartItems = this.cartService.cartItems;\n      /*[3] - create orderItems from cartItems ->convert cartItems into orderItems*/\n\n      /*-------Long Approach-->*/\n\n      /*\n          let orderItems: OrderItem[]= [];\n      for (let i=0; i<cartItems.length; i++){\n        orderItems[i] = new OrderItem(cartItems[i]);\n      }\n      */\n\n      /*-------Short Approach to the same code above-->*/\n\n      let orderItems = cartItems.map(tempCartItem => new OrderItem(tempCartItem));\n      /*[4] - set up purchase*/\n\n      let purchase = new Purchase();\n      /*[5] - populate purchase - customer*/\n\n      purchase.customer = this.checkoutFormGroup.controls['customer'].value;\n      /*[6] - populate purchase - shipping address*/\n\n      purchase.shippingAddress = this.checkoutFormGroup.controls['shippingAddress'].value;\n      const shippingState = JSON.parse(JSON.stringify(purchase.shippingAddress.state));\n      const shippingCountry = JSON.parse(JSON.stringify(purchase.shippingAddress.country));\n      purchase.shippingAddress.state = shippingState.name;\n      purchase.shippingAddress.country = shippingCountry.name;\n      /*[7] - populate purchase - billing address*/\n\n      purchase.billingAddress = this.checkoutFormGroup.controls['billingAddress'].value;\n      const billingState = JSON.parse(JSON.stringify(purchase.billingAddress.state));\n      const billingCountry = JSON.parse(JSON.stringify(purchase.billingAddress.country));\n      purchase.billingAddress.state = billingState.name;\n      purchase.billingAddress.country = billingCountry.name;\n      /*[8] - populate purchase - order and orderItems*/\n\n      purchase.order = order;\n      purchase.orderItems = orderItems; //[STRIPE] - compute the payment INFO\n\n      this.paymentInfo.amount = this.totalPrice * 100; //going from dollars to cents \n\n      /*[9] - Call REST API via the CheckoutService */\n      //[STRIPE-POS] - if valid form then - create Payment Intent\n      //- create card payment\n      //- place order\n\n      if (!this.checkoutFormGroup.invalid && this.displayError.textContent === \"\") {\n        this.checkoutService.createPaymentIntent(this.paymentInfo).subscribe(paymentIntentResponse => {\n          this.stripe.confirmCardPayment(paymentIntentResponse.client_secret, {\n            payment_method: {\n              //Reference the Stripe Elements component cardElement\n              card: this.cardEelement\n            }\n          }, {\n            handleActions: false\n          }).then(function (result) {});\n        });\n      }\n    }\n\n  }\n\n  CheckoutComponent.ɵfac = function CheckoutComponent_Factory(t) {\n    return new (t || CheckoutComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Luv2ShopFormService), i0.ɵɵdirectiveInject(i3.CartService), i0.ɵɵdirectiveInject(i4.CheckoutService), i0.ɵɵdirectiveInject(i5.Router));\n  };\n\n  CheckoutComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CheckoutComponent,\n    selectors: [[\"app-checkout\"]],\n    decls: 144,\n    vars: 23,\n    consts: [[1, \"main-content\", \"page-m\"], [1, \"section-content\", \"section-content-p30\"], [1, \"container-fluid\"], [3, \"formGroup\", \"ngSubmit\"], [\"formGroupName\", \"customer\", 1, \"form-area\"], [1, \"row\"], [1, \"col-md-2\"], [1, \"col-md-9\"], [1, \"input-space\"], [\"formControlName\", \"firstName\", \"type\", \"text\"], [\"class\", \"alert alert-danger mt-1\", 4, \"ngIf\"], [\"formControlName\", \"lastName\", \"type\", \"text\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"formControlName\", \"email\", \"type\", \"text\"], [\"formGroupName\", \"shippingAddress\", 1, \"form-area\"], [\"formControlName\", \"country\", 3, \"change\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"street\", \"type\", \"text\"], [\"formControlName\", \"city\", \"type\", \"text\"], [\"formControlName\", \"state\"], [\"formControlName\", \"zipCode\", \"type\", \"text\"], [1, \"au-checkbox\"], [\"type\", \"checkbox\", 3, \"change\"], [1, \"au-checkmark\"], [\"formGroupName\", \"billingAddress\", 1, \"form-area\"], [\"formGroupName\", \"creditCard\", 1, \"form-area\"], [\"id\", \"card-element\"], [\"id\", \"card-errors\", 1, \"displayError.textContent!=='':\", \"'alert\", \"alert-danger\", \"mt-3\"], [1, \"form-area\"], [1, \"text-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-info\"], [1, \"alert\", \"alert-danger\", \"mt-1\"], [4, \"ngIf\"], [1, \"alert\", \"alert-danger\"], [3, \"ngValue\"]],\n    template: function CheckoutComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function CheckoutComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"h3\");\n        i0.ɵɵtext(6, \"Customer\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 5);\n        i0.ɵɵelementStart(8, \"div\", 6);\n        i0.ɵɵelementStart(9, \"label\");\n        i0.ɵɵtext(10, \"First Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 7);\n        i0.ɵɵelementStart(12, \"div\", 8);\n        i0.ɵɵelement(13, \"input\", 9);\n        i0.ɵɵtemplate(14, CheckoutComponent_div_14_Template, 3, 2, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 5);\n        i0.ɵɵelementStart(16, \"div\", 6);\n        i0.ɵɵelementStart(17, \"label\");\n        i0.ɵɵtext(18, \"Last Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 7);\n        i0.ɵɵelementStart(20, \"div\", 8);\n        i0.ɵɵelement(21, \"input\", 11);\n        i0.ɵɵtemplate(22, CheckoutComponent_div_22_Template, 3, 2, \"div\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 5);\n        i0.ɵɵelementStart(24, \"div\", 6);\n        i0.ɵɵelementStart(25, \"label\");\n        i0.ɵɵtext(26, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\", 7);\n        i0.ɵɵelementStart(28, \"div\", 8);\n        i0.ɵɵelement(29, \"input\", 13);\n        i0.ɵɵtemplate(30, CheckoutComponent_div_30_Template, 3, 2, \"div\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"div\", 14);\n        i0.ɵɵelementStart(32, \"h3\");\n        i0.ɵɵtext(33, \"Shipping Address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"div\", 5);\n        i0.ɵɵelementStart(35, \"div\", 6);\n        i0.ɵɵelementStart(36, \"label\");\n        i0.ɵɵtext(37, \"Country\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"div\", 7);\n        i0.ɵɵelementStart(39, \"div\", 8);\n        i0.ɵɵelementStart(40, \"select\", 15);\n        i0.ɵɵlistener(\"change\", function CheckoutComponent_Template_select_change_40_listener() {\n          return ctx.getStates(\"shippingAddress\");\n        });\n        i0.ɵɵtemplate(41, CheckoutComponent_option_41_Template, 2, 2, \"option\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(42, CheckoutComponent_div_42_Template, 2, 1, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"div\", 5);\n        i0.ɵɵelementStart(44, \"div\", 6);\n        i0.ɵɵelementStart(45, \"label\");\n        i0.ɵɵtext(46, \"Street\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"div\", 7);\n        i0.ɵɵelementStart(48, \"div\", 8);\n        i0.ɵɵelement(49, \"input\", 17);\n        i0.ɵɵtemplate(50, CheckoutComponent_div_50_Template, 3, 2, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(51, \"div\", 5);\n        i0.ɵɵelementStart(52, \"div\", 6);\n        i0.ɵɵelementStart(53, \"label\");\n        i0.ɵɵtext(54, \"City\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(55, \"div\", 7);\n        i0.ɵɵelementStart(56, \"div\", 8);\n        i0.ɵɵelement(57, \"input\", 18);\n        i0.ɵɵtemplate(58, CheckoutComponent_div_58_Template, 3, 2, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(59, \"div\", 5);\n        i0.ɵɵelementStart(60, \"div\", 6);\n        i0.ɵɵelementStart(61, \"label\");\n        i0.ɵɵtext(62, \"State\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(63, \"div\", 7);\n        i0.ɵɵelementStart(64, \"div\", 8);\n        i0.ɵɵelementStart(65, \"select\", 19);\n        i0.ɵɵtemplate(66, CheckoutComponent_option_66_Template, 2, 2, \"option\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(67, CheckoutComponent_div_67_Template, 2, 1, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(68, \"div\", 5);\n        i0.ɵɵelementStart(69, \"div\", 6);\n        i0.ɵɵelementStart(70, \"label\");\n        i0.ɵɵtext(71, \"Zip Code\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(72, \"div\", 7);\n        i0.ɵɵelementStart(73, \"div\", 8);\n        i0.ɵɵelement(74, \"input\", 20);\n        i0.ɵɵtemplate(75, CheckoutComponent_div_75_Template, 3, 2, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(76, \"div\", 8);\n        i0.ɵɵelementStart(77, \"label\", 21);\n        i0.ɵɵelementStart(78, \"input\", 22);\n        i0.ɵɵlistener(\"change\", function CheckoutComponent_Template_input_change_78_listener($event) {\n          return ctx.copyShippingAddressToBillingAddress($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(79, \"span\", 23);\n        i0.ɵɵtext(80, \"Billing Address same as Shipping Address \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(81, \"div\", 24);\n        i0.ɵɵelementStart(82, \"h3\");\n        i0.ɵɵtext(83, \"Billing Address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(84, \"div\", 5);\n        i0.ɵɵelementStart(85, \"div\", 6);\n        i0.ɵɵelementStart(86, \"label\");\n        i0.ɵɵtext(87, \"Country\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(88, \"div\", 7);\n        i0.ɵɵelementStart(89, \"div\", 8);\n        i0.ɵɵelementStart(90, \"select\", 15);\n        i0.ɵɵlistener(\"change\", function CheckoutComponent_Template_select_change_90_listener() {\n          return ctx.getStates(\"billingAddress\");\n        });\n        i0.ɵɵtemplate(91, CheckoutComponent_option_91_Template, 2, 2, \"option\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(92, CheckoutComponent_div_92_Template, 2, 1, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(93, \"div\", 5);\n        i0.ɵɵelementStart(94, \"div\", 6);\n        i0.ɵɵelementStart(95, \"label\");\n        i0.ɵɵtext(96, \"Street\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(97, \"div\", 7);\n        i0.ɵɵelementStart(98, \"div\", 8);\n        i0.ɵɵelement(99, \"input\", 17);\n        i0.ɵɵtemplate(100, CheckoutComponent_div_100_Template, 3, 2, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(101, \"div\", 5);\n        i0.ɵɵelementStart(102, \"div\", 6);\n        i0.ɵɵelementStart(103, \"label\");\n        i0.ɵɵtext(104, \"City\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(105, \"div\", 7);\n        i0.ɵɵelementStart(106, \"div\", 8);\n        i0.ɵɵelement(107, \"input\", 18);\n        i0.ɵɵtemplate(108, CheckoutComponent_div_108_Template, 3, 2, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(109, \"div\", 5);\n        i0.ɵɵelementStart(110, \"div\", 6);\n        i0.ɵɵelementStart(111, \"label\");\n        i0.ɵɵtext(112, \"State\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(113, \"div\", 7);\n        i0.ɵɵelementStart(114, \"div\", 8);\n        i0.ɵɵelementStart(115, \"select\", 19);\n        i0.ɵɵtemplate(116, CheckoutComponent_option_116_Template, 2, 2, \"option\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(117, CheckoutComponent_div_117_Template, 2, 1, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(118, \"div\", 5);\n        i0.ɵɵelementStart(119, \"div\", 6);\n        i0.ɵɵelementStart(120, \"label\");\n        i0.ɵɵtext(121, \"Zip Code\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(122, \"div\", 7);\n        i0.ɵɵelementStart(123, \"div\", 8);\n        i0.ɵɵelement(124, \"input\", 20);\n        i0.ɵɵtemplate(125, CheckoutComponent_div_125_Template, 3, 2, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(126, \"div\", 25);\n        i0.ɵɵelementStart(127, \"h3\");\n        i0.ɵɵtext(128, \"Credit or Debit Card\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(129, \"div\", 26);\n        i0.ɵɵelement(130, \"div\", 27);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(131, \"div\", 28);\n        i0.ɵɵelementStart(132, \"h3\");\n        i0.ɵɵtext(133, \"Review Your Order\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(134, \"p\");\n        i0.ɵɵtext(135);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(136, \"p\");\n        i0.ɵɵtext(137, \"Shipping: FREE\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(138, \"p\");\n        i0.ɵɵtext(139);\n        i0.ɵɵpipe(140, \"currency\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(141, \"div\", 29);\n        i0.ɵɵelementStart(142, \"button\", 30);\n        i0.ɵɵtext(143, \"Purchase\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.checkoutFormGroup);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngIf\", ctx.firstName.invalid && (ctx.firstName.dirty || ctx.firstName.touched));\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.lastName.invalid && (ctx.lastName.dirty || ctx.lastName.touched));\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.email.invalid && (ctx.email.dirty || ctx.email.touched));\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngForOf\", ctx.countries);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.shippingAddressCountry.invalid && (ctx.shippingAddressCountry.dirty || ctx.shippingAddressCountry.touched));\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.shippingAddressStreet.invalid && (ctx.shippingAddressStreet.dirty || ctx.shippingAddressStreet.touched));\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.shippingAddressCity.invalid && (ctx.shippingAddressCity.dirty || ctx.shippingAddressCity.touched));\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngForOf\", ctx.shippingAddressStates);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.shippingAddressState.invalid && (ctx.shippingAddressState.dirty || ctx.shippingAddressState.touched));\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.shippingAddressZipcode.invalid && (ctx.shippingAddressZipcode.dirty || ctx.shippingAddressZipcode.touched));\n        i0.ɵɵadvance(16);\n        i0.ɵɵproperty(\"ngForOf\", ctx.countries);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.billingAddressCountry.invalid && (ctx.billingAddressCountry.dirty || ctx.billingAddressCountry.touched));\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.billingAddressStreet.invalid && (ctx.billingAddressStreet.dirty || ctx.billingAddressStreet.touched));\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.billingAddressCity.invalid && (ctx.billingAddressCity.dirty || ctx.billingAddressCity.touched));\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngForOf\", ctx.billingAddressStates);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.billingAddressState.invalid && (ctx.billingAddressState.dirty || ctx.billingAddressState.touched));\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.billingAddressZipcode.invalid && (ctx.billingAddressZipcode.dirty || ctx.billingAddressZipcode.touched));\n        i0.ɵɵadvance(10);\n        i0.ɵɵtextInterpolate1(\"Total Quantity: \", ctx.totalQuantity, \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"Total Price: \", i0.ɵɵpipeBind2(140, 20, ctx.totalPrice, \"USD\"), \"\");\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormGroupName, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i6.NgIf, i1.SelectControlValueAccessor, i6.NgForOf, i1.NgSelectOption, i1.ɵNgSelectMultipleOption],\n    pipes: [i6.CurrencyPipe],\n    styles: [\"\"]\n  });\n  return CheckoutComponent;\n})();\n(_a = 'customer') === null || _a === void 0 ? void 0 : _a.value;\n;\nconsole.log(\"The email address is \" + ((_b = this.checkoutFormGroup.get('customer')) === null || _b === void 0 ? void 0 : _b.value.email));\nconsole.log(\"The shipping address country is \" + ((_c = this.checkoutFormGroup.get('shippingAddress')) === null || _c === void 0 ? void 0 : _c.value.country.name));\nconsole.log(\"The shipping address state is \" + ((_d = this.checkoutFormGroup.get('shippingAddress')) === null || _d === void 0 ? void 0 : _d.value.state.name));\nresetCart();\n{\n  // reset cart data\n  this.cartService.cartItems = [];\n  this.cartService.totalPrice.next(0);\n  this.cartService.totalQuantity.next(0); // reset the form data \n\n  this.checkoutFormGroup.reset(); // navigate back to the products page\n\n  this.router.navigateByUrl('/products');\n}\nhandleMonthsAndYears();\n{\n  const creditCardFormGroup = this.checkoutFormGroup.get('creditCard');\n  const currentYear = new Date().getFullYear();\n  const selectedYear = Number(creditCardFormGroup === null || creditCardFormGroup === void 0 ? void 0 : creditCardFormGroup.value.expirationYear); // if the current year equals the selected year, then start with the current month\n\n  let startMonth;\n\n  if (currentYear === selectedYear) {\n    startMonth = new Date().getMonth() + 1;\n  } else {\n    startMonth = 1;\n  }\n\n  this.luv2ShopFormService.getCreditCardMonths(startMonth).subscribe(data => {\n    console.log(\"Retrieved credit card months: \" + JSON.stringify(data));\n    this.creditCardMonths = data;\n  });\n} //Populate the states based on User selected Country \n\ngetStates(formGroupName, string);\n{\n  //Get a handle to Form Group Name \n  const formGroup = this.checkoutFormGroup.get(formGroupName); //Retrieve the country from formGroup\n\n  const countryCode = formGroup === null || formGroup === void 0 ? void 0 : formGroup.value.country.code;\n  const countryName = formGroup === null || formGroup === void 0 ? void 0 : formGroup.value.country.name;\n  console.log(`${formGroupName} country code: ${countryCode}`);\n  console.log(`${formGroupName} country name: ${countryName}`); //Make a call to formServive to get the states \n\n  this.luv2ShopFormService.getStates(countryCode).subscribe(data => {\n    var _a; //If its shipping assign the states to shippingAddress\n\n\n    if (formGroupName === 'shippingAddress') {\n      this.shippingAddressStates = data;\n    } else {\n      this.billingAddressStates = data;\n    } //select the first state as default \n\n\n    (_a = formGroup === null || formGroup === void 0 ? void 0 : formGroup.get('state')) === null || _a === void 0 ? void 0 : _a.setValue(data[0]);\n  });\n}","map":null,"metadata":{},"sourceType":"module"}