{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _parsers = _interopRequireDefault(require(\"./v1/parsers\"));\n/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n// We load all the current parsers, because we won't know in advance which version(s) we need to parse\n// Expect to only support current major - 1 (also suspect that this limit may never be hit)\n// More granularity to be defined as needed\n\n\nvar parsersForVersion = function parsersForVersion(version) {\n  switch (version) {\n    case '1.0.0':\n      return _parsers.default;\n\n    case undefined:\n    case null:\n      throw new Error('Api version is required');\n\n    default:\n      throw new Error(\"Unknown api version: \".concat(version, \".  Use an exact semver version.\"));\n  }\n};\n\nvar _default = parsersForVersion;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}