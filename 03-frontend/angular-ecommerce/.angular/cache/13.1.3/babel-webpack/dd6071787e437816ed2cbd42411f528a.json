{"ast":null,"code":"import _asyncToGenerator from \"/Users/miralimirzayev/Desktop/Spring/FULLStackDev_BOOT_CAMP/ecommerce-project-release1.0/03-frontend/angular-ecommerce/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { from } from 'rxjs';\nimport { lastValueFrom } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@okta/okta-angular\";\nexport let AuthInterceptorService = /*#__PURE__*/(() => {\n  class AuthInterceptorService {\n    constructor(oktaAuth) {\n      this.oktaAuth = oktaAuth;\n    }\n\n    intercept(request, next) {\n      return from(this.handleAccess(request, next));\n    }\n\n    handleAccess(request, next) {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        // Only add an access token for secured endpoints\n        const endPoint = environment.luv2shopApiUrl + '/orders';\n        const securedEndpoints = [endPoint];\n\n        if (securedEndpoints.some(url => request.urlWithParams.includes(url))) {\n          // get access token\n          const accessToken = yield _this.oktaAuth.getAccessToken(); // clone the request and add new header with access token\n\n          request = request.clone({\n            setHeaders: {\n              Authorization: 'Bearer ' + accessToken\n            }\n          });\n        }\n\n        return yield lastValueFrom(next.handle(request));\n      })();\n    }\n\n  }\n\n  AuthInterceptorService.ɵfac = function AuthInterceptorService_Factory(t) {\n    return new (t || AuthInterceptorService)(i0.ɵɵinject(i1.OktaAuthService));\n  };\n\n  AuthInterceptorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptorService,\n    factory: AuthInterceptorService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthInterceptorService;\n})();","map":null,"metadata":{},"sourceType":"module"}